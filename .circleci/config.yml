version: 2
jobs:
  build:
    docker:
      - image: node:8.4.0
    working_directory: ~/app
    environment:
      DOCKER_REPO: stefanwalther/verb
      VER: latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - add_ssh_keys
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Install Docker client
          command: ./scripts/cci2-install-docker-client.sh "17.07.0-ce" "edge"
      - run:
          name: Update version tag
          command: |
            set -e
            VER=$(node -e "console.log(require('./package.json').version)")

            # If a git tag is not set or if the tag does not match release pattern e.g. v1.2.3, then add the cci build number to the version.
            RELEASE_PATTERN="v[0-9].*"

            # Exclude this when running the local circlci tool
            # $ circleci -e CIRCLE_LOCAL=true build
            if [ "${CIRCLE_LOCAL}" != "true" ]; then
              if [[ -z "${CIRCLE_TAG}" || ! $CIRCLE_TAG =~ $RELEASE_PATTERN ]]; then
                VER+="-$CIRCLE_BUILD_NUM"
                npm version $VER --no-git-tag-version
              fi
            fi
      - run:
          name: Build Docker image (including tests)
          command: |
            echo Building image "$DOCKER_REPO":"$VER"
            docker build -t $DOCKER_REPO:$VER .
      - run:
          name: Tag image
          command: |
            # Only branch "master" is being marked as latest
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag $DOCKER_REPO:$VER $DOCKER_REPO:latest
            fi
      - run:
          name: Login to Docker
          command: docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
      - deploy:
          name: Push image to Docker Hub
          command: |
            # Do not push branches to Docker Hub
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo Pushing image to docker "$DOCKER_REPO":"$VER"
              docker push $DOCKER_REPO
            fi

